(defvar barVisible true)
(include "elements/bar.yuck")

(defvar systemPanelVisible true)
(include "elements/systemPanel.yuck")

(defvar timePanelVisible true)
(include "elements/timePanel.yuck")

(defvar workspacePanelVisible true)
(include "elements/workspacePanel.yuck")

(defvar switcherVisible false)
(include "elements/switcher.yuck")

(include "elements/notifications.yuck")

(defwindow ui
  :monitor 0
  :windowtype "dock"
  :geometry (geometry 
    :x "0px"
    :y "0px"
    ; Note github.com/elenapan/dotfiles: Setting width and height
    ; here causes certain animations to not display properly.
    ; Instead, we set width and height in *.scss or in the 
    ; upppermost inner widget.
    :anchor "center right"
  )
  :exclusive false
  :reserve (struts :side "top" :distance "4%")

  (centerbox
    (box
      :orientation "v"

      (panel :reveal workspacePanelVisible (workspaceWidget))
      (box :halign "end" (selection :variable "clock" (panel (calanderWidget))))
      (box :halign "end" (systemWidget))
    )

    "";

    (panel :reveal barVisible (bar))
  )
)

(defwidget panel [?reveal]
  (revealer
    :transition "slideleft"
    :reveal {reveal ?: true}
    :duration "150ms"

    (box :space-evenly false :halign "end" :class "main-window"
      (box :class "main-window-inner"
        (children)
      )
    )
  )
)

(deflisten mode
  :initial "default"
  `swaymsg -mt subscribe "['mode']" | jq --unbuffered -r ".change"`
)

(deflisten workspaceJson
  `swaymsg -mt subscribe "['window']" | while read -r line; do swaymsg -t get_tree | jq -c '[.nodes[].nodes[] | select(.name != "__i3_scratch") | . + {windowFocused: ([.. | .focused? == true]) | contains([true])}]'; done`
)
